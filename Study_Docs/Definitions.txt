*************************************************************************************************************************************
## Class

It is a user defined data type like blueprint, which holds its own data members and member functions.

*************************************************************************************************************************************
## Abstraction

Data abstraction refers to providing only essential information to the outside world and hiding their background details, i.e.,
to represent the needed information in program without presenting the details.

*************************************************************************************************************************************
## Encapsulation

Encapsulation is a process of combining data members and functions in a single unit called class. This is to prevent the access to
the data directly, the access to them is provided through the functions of the class.

*************************************************************************************************************************************
## Compiletime Polymorphism

It is also known as Static binding, Early binding and overloading.
Overloading is compile time polymorphism where more than one methods share the same name with different parameters or signature and
different return type.

*************************************************************************************************************************************
## Runtime Polymorphism

It is also known as Dynamic binding, Late binding and overriding.
Overriding is run time polymorphism having same method with same parameters or signature, but associated in a class & its subclass.

*************************************************************************************************************************************
## Inheritance

The capability of a class to derive properties and characteristics from its base class is called Inheritance.

*************************************************************************************************************************************
## Association

Association is a relationship where all objects have their own lifecycle and there is no owner.
Let's take an example of Teacher and Student. Multiple students can associate with single teacher and single student can associate
with multiple teachers, but there is no ownership between the objects and both have their own lifecycle. Both can be created and
deleted independently.

*************************************************************************************************************************************
## Aggregation

Aggregation is a specialised form of Association where all objects have their own lifecycle, but there is ownership and child
objects can not belong to another parent object.
Let's take an example of Department and teacher. A single teacher can not belong to multiple departments, but if we delete the
department, the teacher object will not be destroyed. We can think about it as a “has-a” relationship.

*************************************************************************************************************************************
## Composition

Compositionis again specialised form of Aggregation and we can call this as a “death” relationship. It is a strong type of Aggregation.
Child object does not have its lifecycle and if parent object is deleted, all child objects will also be deleted.

Let's take again an example of relationship between House and Rooms. House can contain multiple rooms - there is no independent
life of room and any room can not belong to two different houses. If we delete the house - room will automatically be deleted.

*************************************************************************************************************************************
##. What is a STL ?  

The Standard Template Library (STL) is a set of C++ template classes to provide common programming data structures and functions
such as lists, stacks, arrays, etc. It is a library of container classes, algorithms and iterators. It is a generalized library
and so, its components are parameterized. A working knowledge of template classes is a prerequisite  for working with STL.

STL has four components
1.Algorithms -- sort(first_iterator, last_iterator) – To sort the given vector.
             -- reverse(first_iterator, last_iterator) – To reverse a vector.
			 --	*max_element (first_iterator, last_iterator) – To find the maximum element of a vector.
			 --	*min_element (first_iterator, last_iterator) – To find the minimum element of a vector.
			 
2.Containers -- vector, list, deque ,set, multiset, map, multimap

3.Functions  -- Functors are objects that can be treated as though they are a function or function pointer. Functors are most commonly
				used along with STLs.
			 -- eg transform() in STL
			 
4.Iterators  -- 1.begin() 2.end() 3.advance() 4.prev() 5.next() 

*************************************************************************************************************************************
## what is a shared library ?

A shared library is a file containing object code that several a.out files may use simultaneously while executing. When a program is
link edited with a shared library, the library code that defines the program's external references is not copied into the program's
object file. Instead, a special section called .lib that identifies the library code is created in the object file. When the UNIX
system executes the resulting a.out file, it uses the information in this section to bring the required shared library code into
the address space of the process.

*************************************************************************************************************************************
##. What is a core dump ? 

In computing, a core dump, memory dump, or system dump consists of the recorded state of the working memory of a computer program at
a specific time, generally when the program has crashed or otherwise terminated abnormally.

*************************************************************************************************************************************
##. What is Segmentation Fault ?

Core Dump/Segmentation fault is a specific kind of error caused by accessing memory that “does not belong to you.”
When a piece of code tries to do read and write operation in a read only location in memory or freed block of memory, it is known as
core dump.It is an error indicating memory corruption.

*************************************************************************************************************************************
## What is fpic in linux ? 

The f is the gcc prefix for options that "control the interface conventions used in code generation" The PIC stands for 
"Position Independent Code", it is a specialization of the fpic for m68K and SPARC.

Position Independent Code means that the generated machine code is not dependent on being located at a specific address in order to work.
E.g. jumps would be generated as relative rather than absolute.

Pseudo-assembly:

PIC: This would work whether the code was at address 100 or 1000

100: COMPARE REG1, REG2
101: JUMP_IF_EQUAL CURRENT+10
...
111: NOP

Non-PIC: This will only work if the code is at address 100

100: COMPARE REG1, REG2
101: JUMP_IF_EQUAL 111
...
111: NOP

*************************************************************************************************************************************
